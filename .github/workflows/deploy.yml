name: 🚀 Deploy Portfolio

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # Job 1: Lint and Test
  lint-and-test:
    name: 🧪 Lint & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🔍 Run ESLint
        run: npm run lint
        continue-on-error: false
        
      - name: 🎯 Type Check
        run: npm run type-check
        continue-on-error: false
        
      - name: 🧪 Run Tests
        run: npm test
        continue-on-error: false

  # Job 2: Build Application
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build Application
        run: npm run build
        env:
          NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.APP_URL }}
          
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next
          retention-days: 1

  # Job 3: Security Audit
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🔍 Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: 🛡️ Run Snyk Security Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Job 4: Deploy to Vercel (Recommended)
  deploy-vercel:
    name: 🌐 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📥 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .next
          
      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

  # Job 5: Deploy to Netlify (Alternative)
  deploy-netlify:
    name: 🌐 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'Vivinjayanth'
    environment: production
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build for Static Export
        run: |
          npm run build
          npm run export
        env:
          NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
          
      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './out'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Job 6: Deploy to GitHub Pages (Free Option)
  deploy-github-pages:
    name: 📄 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[deploy-pages]')
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build for Static Export
        run: |
          npm run build
          npm run export
          touch out/.nojekyll
          
      - name: 📤 Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out
          
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  # Job 7: Performance Testing (Optional)
  lighthouse-audit:
    name: 🚨 Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🚨 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ secrets.PRODUCTION_URL }}
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # Job 8: Slack Notification (Optional)
  notify-slack:
    name: 📢 Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify, deploy-github-pages]
    if: always() && (github.ref == 'refs/heads/main')
    
    steps:
      - name: 📢 Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          username: 'GitHub Actions'
          icon_emoji: ':rocket:'
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: |
            Portfolio deployment ${{ job.status }}!
            Repository: ${{ github.repository }}
            Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  # Job 9: Update Deployment Status
  update-status:
    name: 📊 Update Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify, deploy-github-pages]
    if: always()
    
    steps:
      - name: 📊 Update Deployment Status
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const deploymentStatus = context.payload.workflow_run?.conclusion === 'success' ? 'success' : 'failure';
            
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: deploymentStatus,
              description: `Deployment ${deploymentStatus}`,
              environment_url: process.env.PRODUCTION_URL || 'https://your-portfolio.vercel.app'
            });
